# current PWD for playbook execution is: ~/playbooks - so 

- name: Creates STAGE directory
  file:
    path: ../{{ local_stage }}/{{ cycle }}
    state: directory 
    mode: 0777
  delegate_to: localhost

- name: "Check if patches exists locally - will download only if not existing"
  ansible.builtin.find:
    paths: ../{{ local_stage }}/{{ cycle }}
    patterns: "p{{ item.number }}*{{ item.mos_regexp }}*"
  register: info
  delegate_to: localhost
  loop: "{{ mos_download | flatten }}"
  loop_control:
    label: "{{ item.number }}"

- name: "Show existing Patches"
  debug: 
    msg: "Patch {{ item.files|map(attribute='path') }} EXIST in {{ local_stage }}"
  when: item.matched > 0
  loop: "{{ info.results }}"
  loop_control:
    label: "{{ item.item.number }}"

- name: "Downloading Missing Patch"
  ansible.builtin.command: java -jar ../roles/download/files/getMOSPatch.jar patch={{ item.item.number }}  platform={{ item.item.mos_platform }} regexp=.*{{ item.item.mos_regexp }}.* download=all MOSUser={{ mos_user }} MOSPass={{ mos_pass }} stagedir=../{{ local_stage }}/{{ cycle }}
  when: item.matched == 0
  delegate_to: localhost
  register: out1
  loop: "{{ info.results }}"
  loop_control:
    label: "{{ item.item.number }}"
  no_log: true
    
- ansible.builtin.find:
    paths: ../{{ local_stage }}/{{ cycle }}
    patterns: "p*zip"
    file_type: file
  delegate_to: localhost
  register: zip_files

- name: "List files in {{ local_stage }}"
  debug:
    msg: "{{ zip_files.files|map(attribute='path') }}"
  